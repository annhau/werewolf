{"version":3,"sources":["Werewolf.js","serviceWorker.js","index.js"],"names":["ROLES","Player","pname","role","Object","classCallCheck","this","active_wolf","init_stats","bitten","protected","seer","muted","hunted","disabled","previous_target","oplayer","r","SetUpPlayer","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","playerNames","e","preventDefault","string","slice","inp","refs","player","value","charAt","toUpperCase","includes","setState","error","push","focus","_this2","row","forEach","n","react_default","a","createElement","className","key","onSubmit","addPlayer","bind","type","ref","onClick","submitPlayerNames","Component","SetUpRole","_this3","numPlayer","length","_this4","total","count","Number","_this5","playerRoles","i","array","j","Math","floor","random","temp","shuffleArray","playerList","wolfNo","index","p","console","log","submitPlayer","_this6","changeSelectRemain","style","width","textAlign","readOnly","createPlayers","Night","_this7","night","currentPlayer","players","currentIndex","actions","_this8","refDiv","checkbox","childNodes","checked","background","submitActions","_this9","divRef","_this10","changeColor","id","name","required","htmlFor","addAction","Day","_this11","executePlayer","_this12","_this13","originPlayers","map","events","gameOver","restart","nextPhase","albert","goldy","App","_this14","phase","names","filter","reduce","prev","current","activeWolf","getActiveWolf","target","do_action","dead_players","countVillagers","Werewolf_SetUpPlayer","Werewolf_SetUpRole","Werewolf_Night","Werewolf_Day","Boolean","window","location","hostname","match","ReactDOM","render","Werewolf","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fc04441.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\n\nconst ROLES = ['Maria', 'Guard', 'Spell Caster', 'Seer', 'Hunter', 'Werewolf', 'Cursed', 'Villager'];\n\nfunction capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\n\nclass Player {\n    constructor(pname, role) {\n        this.pname = pname;\n        this.role = role;\n        this.active_wolf = null;\n        this.init_stats();\n    }\n\n    init_stats() {\n        this.bitten = false;\n        this.protected = false;\n        this.seer = false;\n        this.muted = false;\n        this.hunted = false;\n        this.disabled = false;\n        this.previous_target = null;\n    }\n\n    do_action(oplayer) {\n        this.previous_target = oplayer;\n        if (this.disabled) return;\n        let r = this.role;\n        if (r === 'Maria')\n            oplayer.disabled = true;\n        else if (r === 'Guard')\n            oplayer.protected = true;\n        else if (r === 'Spell Caster')\n            oplayer.muted = true;\n        else if (r === 'Seer')\n            oplayer.seer = true;\n        else if (r === 'Hunter')\n            oplayer.hunted = true;\n        else if (this.active_wolf !== null) {\n            if (!oplayer.protected) {\n                if (oplayer.role === 'Cursed') {\n                    oplayer.role = 'Werewolf';\n                    oplayer.active_wolf = 69\n                }\n                else\n                    oplayer.bitten = true;\n            }\n        }\n    }\n}\n\nclass SetUpPlayer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playerNames: []\n        }\n    }\n\n    addPlayer(e) {\n        e.preventDefault();\n        let playerNames = this.state.playerNames.slice();\n        let inp = capitalize(this.refs.player.value);\n        if (inp !== \"\" && !playerNames.includes(inp)) {\n            playerNames.push(inp);\n            this.setState({'playerNames': playerNames, error: null})\n        } else {\n            this.setState({error: \"Do not use the same name\"})\n        }\n        this.refs.player.focus();\n        this.refs.player.value = \"\";\n    }\n\n    render() {\n        let row = [];\n        let playerNames = this.state.playerNames;\n        this.state.playerNames.forEach(n => row.push(\n            <li className=\"\" key={n}>{n}</li>));\n        return (\n            <div>\n                <h3>Add players to the game</h3>\n                {this.state.error ? <p className=\"text-danger\"> {this.state.error}</p> : null}\n                <ul className=\"mb-3\">{row}</ul>\n                <form className=\"form-inline\" onSubmit={(e) => this.addPlayer.bind(this)(e)}>\n                    <div className=\"input-group mb-3\">\n                        <input type=\"text\" className=\"form-control\" ref=\"player\"/>\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-danger\" type=\"submit\">Add</button>\n                        </div>\n                    </div>\n\n                </form>\n                <button className=\"btn btn-danger\" onClick={() => this.props.submitPlayerNames(playerNames)}>Done\n                </button>\n            </div>\n        );\n    }\n}\n\nclass SetUpRole extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            numPlayer: this.props.playerNames.length,\n        }\n    };\n\n    changeSelectRemain() {\n        let total = 0;\n        ROLES.forEach(role => {\n            let count = Number(this.refs[role].value);\n            if (count > 0)\n                total += count\n        });\n        this.setState({numPlayer: this.props.playerNames.length - total});\n    }\n\n    createPlayers() {\n        let playerRoles = [];\n        ROLES.forEach(role => {\n            let count = Number(this.refs[role].value);\n            for (let i = 0; i < count; i++)\n                playerRoles.push(role);\n        });\n        if (playerRoles.length !== this.props.playerNames.length) return;\n        shuffleArray(playerRoles);\n\n        let playerList = [];\n        let wolfNo = 1;\n        this.props.playerNames.forEach((n, index) => {\n            let p = new Player(n, playerRoles[index]);\n\n            if (p.role === 'Werewolf') {\n                p.active_wolf = wolfNo;\n                wolfNo += 1\n            }\n            playerList.push(p); console.log(p.pname, ':', p.role, p.active_wolf);\n        });\n        this.props.submitPlayer(playerList);\n    }\n\n    render() {\n        let row = [];\n        let error = this.state.numPlayer < 0 ? <p className=\"text-danger\"> Number of roles is not correct </p> : null;\n        ROLES.forEach(role => row.push(\n            <li className=\"list-group-item\" key={role}>\n                {role}\n                <span className=\"btn float-right\"\n                      onClick={() => {\n                          this.refs[role].value = Number(this.refs[role].value) + 1;\n                          this.changeSelectRemain()\n                      }}> <i className=\"fas fa-plus-circle text-white\" />\n                </span>\n                <input ref={role} className=\"form-control float-right\" style={{width: \"80px\", textAlign: \"center\"}} type=\"number\" readOnly/>\n                <span className=\"btn float-right\" onClick={() => {\n                    this.refs[role].value = this.refs[role].value > 0 ? Number(this.refs[role].value) - 1 : this.refs[role].value;\n                    this.changeSelectRemain();\n                }\n                }> <i className=\"fas fa-minus-circle text-white\" />\n                </span>\n\n            </li>)\n        );\n        return (\n            <div>\n                <h3>Select roles: {this.state.numPlayer > 0 ? this.state.numPlayer + ' remain' : null}\n                </h3>\n                {this.state.error ? <p className=\"text-danger\"> this.state.error </p> : null}\n                <ul className=\"list-group\">\n                    {row}\n                </ul>\n                <br/>\n                {error ? error :\n                    <button className=\"btn btn-danger\" onClick={this.createPlayers.bind(this)}>Done</button>}\n            </div>\n        );\n    }\n}\n\n\nclass Night extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            night: this.props.night,\n            currentPlayer: this.props.players[0],\n            currentIndex: 0,\n            actions: {},\n        }\n    }\n\n    addAction(e) {\n        e.preventDefault();\n        let actions = this.state.actions;\n        this.props.players.forEach((player, index) => {\n            let refDiv = this.refs[player.pname];\n            let checkbox = refDiv.childNodes[0];\n            if (checkbox.checked) {\n                actions[this.state.currentIndex] = index;\n                checkbox.checked = false;\n                refDiv.style.background = 'lightcoral';\n            }\n        });\n\n        this.setState({actions: actions});\n\n        let index = this.state.currentIndex;\n        index += 1;\n        if (index === this.props.players.length) {\n            this.props.submitActions(this.state.actions);\n        } else {\n            let currentPlayer = this.props.players[index];\n            this.setState({\n                currentPlayer: currentPlayer,\n                currentIndex: index\n            });\n        }\n    }\n\n    changeColor() {\n        this.props.players.forEach((player, index) => {\n            let divRef = this.refs[player.pname];\n            if (divRef.childNodes[0].checked) {\n                divRef.style.background = 'red';\n            } else {\n                divRef.style.background = 'lightcoral';\n            }\n        });\n    }\n\n    render() {\n        let row = [];\n        this.props.players.forEach((player, index) => {\n            let inp = <div ref={player.pname} key={player.pname} className=\"radio-div\"\n                           onClick={this.changeColor.bind(this)}>\n                <input type=\"radio\" id={player.pname} name=\"target\" className=\"radio-input\"\n                       required/>\n                <label className=\"radio-label\" htmlFor={player.pname}>{player.pname}</label>\n            </div>;\n            row.push(inp)\n        });\n        return (\n            <div>\n                <h2>Night {this.state.night}</h2>\n                <h3>Turn of {this.state.currentPlayer.pname}</h3>\n                <form onSubmit={(e) => this.addAction.bind(this)(e)}>\n                    {row}\n                    <button type=\"submit\" className=\"mt-3 btn btn-danger\">Next</button>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nclass Day extends Component {\n    executePlayer(e) {\n        e.preventDefault();\n        this.props.players.forEach((player, index) => {\n            if (this.refs[player.pname].childNodes[0].checked) {\n                this.props.executePlayer(player)\n            }\n        });\n    }\n\n    changeColor() {\n        this.props.players.forEach((player, index) => {\n            let divRef = this.refs[player.pname];\n            if (divRef.childNodes[0].checked) {\n                divRef.style.background = 'red';\n            } else {\n                divRef.style.background = 'lightcoral';\n            }\n        });\n    }\n\n\n    render() {\n        let row = [];\n        this.props.players.forEach((player, index) => {\n            let inp = <div ref={player.pname} key={player.pname} className=\"radio-div\"\n                           onClick={this.changeColor.bind(this)}>\n                <input type=\"radio\" id={player.pname} name=\"target\" className=\"radio-input\"\n                       required/>\n                <label className=\"radio-label\" htmlFor={player.pname}>{player.pname}</label>\n            </div>;\n            row.push(inp)\n        });\n        let originPlayers = this.props.originPlayers.map(player =>\n            <li>{player.pname}: {player.role} {player.active_wolf}</li>);\n        return (\n            <div>\n                <h3>Events: </h3>\n                <ul>\n                    {this.props.events ? this.props.events : \"Nothing happened\"}\n                </ul>\n\n                {this.props.gameOver !== null\n                    ? <div>\n                        <h3>{this.props.gameOver}</h3>\n                        <ul>{originPlayers}</ul>\n                        <button onClick={() => this.props.restart()} className=\"btn btn-danger\">New game</button>\n                    </div>\n                    : <div>\n                        <h3> Who's the wolf ? </h3>\n                        <form onSubmit={(e) => this.executePlayer.bind(this)(e)}>\n                            {row}\n                            <button type=\"submit\" className=\"mt-3 mr-3 btn btn-danger\">Execute</button>\n                            <button onClick={() => this.props.nextPhase()} className=\"mt-3 btn btn-secondary\">Skip\n                            </button>\n                        </form>\n\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n\nlet albert = new Player('Albert', 'Werewolf');\nalbert.active_wolf = 1;\nlet goldy = new Player('Goldy', 'Werewolf');\ngoldy.active_wolf = 2;\nconst DUMP_PLAYERS = [albert, goldy,\n    new Player('Alice', 'Seer'),\n    new Player('Golden', 'Hunter'),\n    new Player('Goldeny', 'Villager'),\n];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            phase: 'setUpName',\n            players: [],\n            playerNames: [],\n            night: 1,\n        }\n    }\n\n    nextPhase() {\n        this.setState((state, props) => {\n            return {phase: 'night', night: state.night + 1}\n        })\n    }\n\n    submitPlayerNames(names) {\n        if (names.length !== 0) {\n            this.setState({\n                playerNames: names,\n                phase: 'setUpRole'\n            })\n        }\n    }\n\n    submitPlayer(players) {\n        let gameOver = this.gameOver(players);\n        if (gameOver) {\n            this.setState({\n                players: players,\n                originPlayers: players.slice(0),\n                phase: 'day',\n                gameOver: gameOver\n            })\n        } else {\n            this.setState({\n                players: players,\n                originPlayers: players.slice(0),\n                phase: 'night'\n            })\n        }\n    }\n\n    getActiveWolf() {\n        return this.state.players.filter(e => e.active_wolf !== null)\n            .reduce((prev, current) => (prev.active_wolf < current.active_wolf) ? prev : current)\n    }\n\n    submitActions(actions) {\n        let players = this.state.players;\n\n        // Handle Actions\n        let activeWolf = this.getActiveWolf(); console.log(activeWolf);\n        ROLES.forEach(role => {\n            players.forEach((player, index) => {\n                if (player.role === role) {\n                    let target = players[actions[index]];\n                    if (player.role !== 'Werewolf') {\n                        player.do_action(target);\n                    } else if (player === activeWolf) {\n                        player.do_action(target);\n                    }\n                }\n            })\n        });\n\n        // Handle events\n        let dead_players = [];\n        let events = [];\n        players.forEach((player) => {\n            if (player.bitten) {\n                events.push(<li key={player.id}>{player.pname} died.</li>);\n                dead_players.push(player);\n                if (player.role === 'Hunter' && player.previous_target !== player) {\n                    events.push(<li key={player.previous_target.id}>{player.previous_target.pname} died.</li>);\n                    dead_players.push(player.previous_target);\n                }\n            }\n            if (player.muted)\n                events.push(<li key={player.id}>{player.pname} is muted.</li>);\n            if (player.seer) {\n                if (player.bitten)\n                    events.push(<li key={player.id}>{player.pname} needs to tell truth</li>);\n                else\n                    events.push(<li key={player.id}>{player.pname} needs to tell truth\n                        (truth: {player.previous_target.pname})</li>)\n            }\n            player.init_stats();\n        });\n\n        players = players.filter((e) => !dead_players.includes(e));\n        this.setState({\n            phase: 'day',\n            events: events,\n            players: players,\n            gameOver: this.gameOver(players)\n        });\n    }\n\n    gameOver(players) {\n        let countVillagers = 0;\n        players.forEach(player => {\n            countVillagers = player.role === 'Werewolf' ? countVillagers - 1 : countVillagers + 1\n        });\n        if (countVillagers === players.length)\n            return 'Villagers won.';\n        else if (countVillagers <= 0)\n            return 'Wolfs won.';\n        else\n            return null\n    }\n\n    restart() {\n        this.setState({\n            phase: 'setUpName',\n            players: [],\n            playerNames: [],\n            events: [],\n            night: 1,\n        })\n    }\n\n    executePlayer(player) {\n        let players = this.state.players.filter(e => e !== player);\n        let gameOver = this.gameOver(players);\n        if (!gameOver) {\n            this.setState((state, props) => {\n                return {\n                    players: players,\n                    phase: 'night',\n                    night: state.night + 1\n                }\n            })\n        } else {\n            this.setState({\n                players: players,\n                phase: 'day',\n                gameOver: gameOver\n            })\n        }\n\n    }\n\n    render() {\n        let phase = this.state.phase;\n\n        if (phase === 'setUpName')\n            return <SetUpPlayer submitPlayerNames={this.submitPlayerNames.bind(this)}/>;\n        else if (phase === 'setUpRole')\n            return <SetUpRole playerNames={this.state.playerNames} submitPlayer={this.submitPlayer.bind(this)}/>;\n        else if (phase === 'night')\n            return <Night players={this.state.players} night={this.state.night}\n                          submitActions={this.submitActions.bind(this)}/>;\n        else if (phase === 'day')\n            return <Day events={this.state.events}\n                        nextPhase={this.nextPhase.bind(this)}\n                        players={this.state.players}\n                        originPlayers={this.state.originPlayers}\n                        executePlayer={this.executePlayer.bind(this)}\n                        gameOver={this.state.gameOver} restart={this.restart.bind(this)}/>;\n        else\n            return <div> {phase} </div>\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Werewolf';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}